<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analyze.dao.SkuInfoMapper">
  <resultMap id="BaseResultMap" type="com.analyze.model.SkuInfo">
    <result column="asin" jdbcType="VARCHAR" property="asin" />
    <result column="isMain" jdbcType="VARCHAR" property="ismain" />
    <result column="compareOurAsin" jdbcType="VARCHAR" property="compareourasin" />
    <result column="sellerName" jdbcType="VARCHAR" property="sellername" />
    <result column="ourCode" jdbcType="VARCHAR" property="ourcode" />
    <result column="category" jdbcType="VARCHAR" property="category" />
    <result column="AmzBrand" jdbcType="VARCHAR" property="amzbrand" />
    <result column="isOurBrand" jdbcType="VARCHAR" property="isourbrand" />
    <result column="GroupSku" jdbcType="VARCHAR" property="groupsku" />
    <result column="insertTime" jdbcType="TIMESTAMP" property="inserttime" />
    <result column="id" jdbcType="INTEGER" property="id" />
  </resultMap>


 
  <insert id="insert" parameterType="com.analyze.model.SkuInfo">
    insert into skuInfo (asin, isMain, compareOurAsin, 
      sellerName, ourCode, category, 
      AmzBrand, isOurBrand, GroupSku, 
      insertTime, id)
    values (#{asin,jdbcType=VARCHAR}, #{ismain,jdbcType=VARCHAR}, #{compareourasin,jdbcType=VARCHAR}, 
      #{sellername,jdbcType=VARCHAR}, #{ourcode,jdbcType=VARCHAR}, #{category,jdbcType=VARCHAR}, 
      #{amzbrand,jdbcType=VARCHAR}, #{isourbrand,jdbcType=VARCHAR}, #{groupsku,jdbcType=VARCHAR}, 
      #{inserttime,jdbcType=TIMESTAMP}, #{id,jdbcType=INTEGER})
  </insert>
<!--   <insert id="insertSelective" parameterType="com.analyze.model.SkuInfo"> -->
<!--     insert into skuInfo -->
<!--     <trim prefix="(" suffix=")" suffixOverrides=","> -->
<!--       <if test="asin != null"> -->
<!--         asin, -->
<!--       </if> -->
<!--       <if test="ismain != null"> -->
<!--         isMain, -->
<!--       </if> -->
<!--       <if test="compareourasin != null"> -->
<!--         compareOurAsin, -->
<!--       </if> -->
<!--       <if test="sellername != null"> -->
<!--         sellerName, -->
<!--       </if> -->
<!--       <if test="ourcode != null"> -->
<!--         ourCode, -->
<!--       </if> -->
<!--       <if test="category != null"> -->
<!--         category, -->
<!--       </if> -->
<!--       <if test="amzbrand != null"> -->
<!--         AmzBrand, -->
<!--       </if> -->
<!--       <if test="isourbrand != null"> -->
<!--         isOurBrand, -->
<!--       </if> -->
<!--       <if test="groupsku != null"> -->
<!--         GroupSku, -->
<!--       </if> -->
<!--       <if test="inserttime != null"> -->
<!--         insertTime, -->
<!--       </if> -->
<!--       <if test="id != null"> -->
<!--         id, -->
<!--       </if> -->
<!--     </trim> -->
<!--     <trim prefix="values (" suffix=")" suffixOverrides=","> -->
<!--       <if test="asin != null"> -->
<!--         #{asin,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="ismain != null"> -->
<!--         #{ismain,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="compareourasin != null"> -->
<!--         #{compareourasin,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="sellername != null"> -->
<!--         #{sellername,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="ourcode != null"> -->
<!--         #{ourcode,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="category != null"> -->
<!--         #{category,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="amzbrand != null"> -->
<!--         #{amzbrand,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="isourbrand != null"> -->
<!--         #{isourbrand,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="groupsku != null"> -->
<!--         #{groupsku,jdbcType=VARCHAR}, -->
<!--       </if> -->
<!--       <if test="inserttime != null"> -->
<!--         #{inserttime,jdbcType=TIMESTAMP}, -->
<!--       </if> -->
<!--       <if test="id != null"> -->
<!--         #{id,jdbcType=INTEGER}, -->
<!--       </if> -->
<!--     </trim> -->
<!--   </insert> -->
  
 <select id="Amazon_SKUAnalysis_SkuSearch" resultType="Map" parameterType="java.util.Map">
   {call Amazon_SKUAnalysis_SkuSearch(#{keyword},#{asin},#{type},#{city},#{page},#{label})}<!--city是字段排序  -->
  </select>
  <select id="Amazon_SKUAnalysis_SkuSearch_downLoad" resultType="Map" parameterType="java.util.Map">
   {call Amazon_SKUAnalysis_SkuSearch(#{keyword},#{asin},#{type},#{city},#{page},#{label})}<!--city是字段排序  -->
  </select>
  <select id="Amazon_SKUAnalysis_SkuSearch_Details" resultType="Map" parameterType="java.util.Map">
   {call Amazon_SKUAnalysis_SkuSearch_Details(#{userId},#{asin})}
  </select>
  <select id="seachWhether"  resultType="java.lang.Long" parameterType="java.util.Map">
  	SELECT DISTINCT isMain FROM [dbo].[skuInfo]  WHERE asin = #{asin}
  </select>
  <select id="seachAsin" resultType="Map" parameterType="java.util.Map">
  	 SELECT DISTINCT asin FROM [dbo].[skuInfo] WHERE compareOurAsin = #{asin}
  </select>
  <select id="seachAsinMe" resultType="Map" parameterType="java.util.Map">
  	 SELECT DISTINCT compareOurAsin FROM [dbo].[skuInfo] WHERE asin = #{asin}
  </select>
   <select id="search_price" >
	SELECT top 1  si.insertTime,si.sku_price FROM skuCommonInfo si where si.asin=#{0} ORDER BY si.insertTime DESC;
   </select>

    <!-- 查询商品产品线信息 -->
    <select id="Amazon_MerchandiseInfo_ProductLineInfo" resultType="Map" parameterType="java.util.Map">
    SELECT DISTINCT ProductLine FROM [dbo].[skuInfo_new]
    </select>

   <select id="Amazon_SalesAnalysis_SalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_SalesAnalysis (#{startTime},#{endTime})}
  </select>
  <select id="Amazon_SalesAnalysis_TotalSalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_TotalSalesAnalysis (#{startTime},#{endTime})}
  </select>
  
  <select id="Amazon_SalesAnalysis_HotSaleList_Channel" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_HotSaleList_Channel }
  </select>
  
  <select id="Amazon_SalesAnalysis_HotSaleList" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_HotSaleList (#{name},#{startTime},#{endTime})}
  </select>
  
   <select id="Amazon_SalesAnalysis_CategorySelect" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_CategorySelect}
  </select>
  <select id="Amazon_SalesAnalysis_CategorySalesAnalysisDate" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_CategorySalesAnalysisDate (#{category},#{startTime},#{endTime})}
  </select>
  
  <select id="Amazon_SalesAnalysis_BrandSalesAnalysisDate" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_BrandSalesAnalysisDate (#{startTime},#{endTime})}
  </select>
  <select id="Amazon_SalesAnalysis_BrandSalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_BrandSalesAnalysis (#{startTime},#{endTime})}
  </select>
  
  <select id="Amazon_SalesAnalysis_SkuInformation" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_SkuInformation (#{sku})}
  </select>
  
  <select id="Amazon_SalesAnalysis_SkuSalesTrend" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_SkuSalesTrend (#{sku},#{startTime},#{endTime})}
  </select>
  
  <select id="Amazon_SalesAnalysis_SkuRegionSalesTrendDate" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_SkuRegionSalesTrendDate (#{sku},#{startTime},#{endTime})}
  </select>
  <select id="Amazon_SalesAnalysis_SkuRegionSalesTrend" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_SkuRegionSalesTrend (#{sku},#{startTime},#{endTime})}
  </select>
  <select id="Amazon_SalesAnalysis_CategorySalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_CategorySalesAnalysis (#{startTime},#{endTime},#{page})}
  </select>
  <select id="Amazon_SalesAnalysis_HotRanking" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_SalesAnalysis_HotRanking_new (#{startTime},#{endTime},#{BrandName},#{category},#{channel},#{page},#{skuasinname_top},#{skuasinname})}
  </select>
  <select id="Amazon_SalesAnalysis_HotRanking_Select" resultType="Map" parameterType="int">
  	 {call Amazon_SalesAnalysis_HotRanking_Select (#{1})}
  </select>
	<select id="Amazon_UserAnalysis_HousetimeSalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_UserAnalysis_HousetimeSalesAnalysis (#{startTime},#{endTime})}
  </select>
  <select id="Amazon_UserAnalysis_RegionSalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_UserAnalysis_RegionSalesAnalysis (#{startTime},#{endTime})}
  </select>
  <select id="Amazon_UserAnalysis_CategorySalesAnalysis" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_UserAnalysis_CategorySalesAnalysis (#{startTime},#{endTime})}
  </select>
  
  <insert id="addSku" parameterType="java.util.Map">
    insert into skuInfo 
    ( asin, isMain,compareOurAsin,ourCode,category,groupSKU,AmzBrand,isOurBrand,insertTime ) values 
    (#{asin}, #{isMain} ,#{compareOurAsin},#{sku},#{category},#{groupSKU},#{AmzBrand},#{isOurBrand} ,#{insertTime})

  </insert>
  
   <select id="getSkumanage" resultType="Map" parameterType="java.util.Map">
<!-- 	select top 10 * from skuInfo where asin not in(select top (#{index}) asin from skuInfo ORDER BY insertTime ASC) -->
<!-- 	<if test="skuType != ''"> -->
<!-- 		and isMain = #{skuType} -->
<!-- 	</if> -->
<!-- 	 ORDER BY insertTime desc; -->
	 
	 
	 select  * from skuInfo 
	 
	 where 1=1 
	 <if test="skuType != ''">
		and isMain = #{skuType}
	</if>

	 ORDER BY insertTime desc offset ((#{page}-1)*10) row fetch next 10 rows only
	 
	 
	</select>
  
  <select id="getCount" parameterType="Map" resultType="java.lang.Long">
  select count(1) from skuInfo 
  where 1=1
	<if test="skuType != ''">
 	and isMain = #{skuType}
  </if>

  
  </select>
  
   <sql id="Base_Column_List">
    id,asin,isMain,compareOurAsin,sellerName,ourCode,category,AmzBrand,isOurBrand,GroupSku,inserttime
  </sql>
  
  <select id="selectByPrimaryKey2" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from skuInfo
    where id = #{id,jdbcType=BIGINT}
  </select>
  
  
  
  
  
   <insert id="insertSelective" parameterType="com.analyze.model.SkuInfo">
    insert into skuInfo
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="asin != null">
        asin,
      </if>
      <if test="ismain != null">
        isMain,
      </if>
      <if test="compareourasin != null">
        compareOurAsin,
      </if>
      inserttime
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="asin != null">
        #{asin,jdbcType=BIGINT},
      </if>
      <if test="ismain != null">
        #{ismain,jdbcType=INTEGER},
      </if>
      <if test="compareourasin != null">
        #{compareourasin,jdbcType=NVARCHAR},
      </if>
      GETDATE()
    </trim>
  </insert>
  
  
   <select id="checkHas" resultType="Map" parameterType="com.analyze.model.SkuInfo">
 		 select * from skuInfo where isMain=0 and asin= #{asin,jdbcType=BIGINT} and compareOurAsin = #{compareourasin,jdbcType=NVARCHAR}
   </select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from skuInfo
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <select id="getSkuinfo" resultType="Map" parameterType="Map">
  
  select * from skuInfo where id = #{id,jdbcType=BIGINT}
  
  </select>
  
  <select id="getAsinMe_price" resultType="Map">
  	 SELECT top 1si.asin,si.sku_price FROM skuCommonInfo si where si.asin=#{0} ORDER BY si.insertTime DESC;
  </select>
  
  <select id="getCategoryInfo" resultType="Map" parameterType="java.util.Map">
	select * from CategoryInfo where userId=#{isParent}
 </select>
 <select id="getCategoryInfo_parent" resultType="Map" parameterType="java.util.Map">
	select * from CategoryInfo where userId=#{isParent} and parent_Category=#{parentName}
 </select>
 <update id="updateParentCategory">
 	update CategoryInfo set Category=#{newcategory} where userId=#{userId} and parent_Category=#{parentCategory} and Category=#{category} 
 </update>
 <delete id="deleteparentCategory">
 	delete from CategoryInfo where userId=#{userId} and parent_Category=#{parentCategory} and Category=#{category} 
 </delete>
 <insert id="addCategory">
 insert into CategoryInfo (userId,Category,parent_Category,insertTime) values (#{userId},#{category},#{parentCategory},getdate())
 </insert>
 <select id="Amazon_MonitoringOverview_SKU_Brand" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_SKU_Brand (#{userId},#{mysku})}
  </select>
  <select id="Amazon_MonitoringOverview_SKU" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_SKU (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag})}
  </select>
  <select id="Amazon_MonitoringOverview_SKU_Jingpin" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_SKU_Jingpin (#{userId},#{asin})}
  </select>
  <select id="Amazon_MonitoringOverview_PriceChange" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_PriceChange (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},#{cityCode},#{date})}
  </select>
  <select id="Amazon_MonitoringOverview_TitleChange" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_TitleChange (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},#{cityCode},#{date})}
  </select>
  <select id="getSkuCompareInfoByAsin" resultType="Map" parameterType="java.util.Map">
  	 SELECT compareOurAsin FROM [dbo].[skucompareInfo] WHERE asin = #{asin}
  </select>
  <select id="Amazon_MonitoringOverview_RankingChange" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_RankingChange (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},#{cityCode},#{date})}
  </select>
  <select id="Amazon_MonitoringOverview_NewReview" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_NewReview (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},#{cityCode},#{date})}
  </select>
  <select id="Amazon_MonitoringOverview_PictureChange" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_PictureChange (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},#{cityCode},#{date})}
  </select>
  <select id="Amazon_MonitoringOverview_Category" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_Category (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},#{cityCode},#{date})}
  </select>
  <select id="Amazon_MonitoringOverview_PriceOverview" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_PriceOverview (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag},60601,#{date})}
  </select>
  <select id="new_getLable" resultType="Map" parameterType="java.util.Map">
  	 select labelName from productLabel where userId=#{userId}
  </select>
  <select id="product_getLable" resultType="Map" parameterType="java.util.Map">
  select count(1) num,labelName from asinLabel where userId=#{userId} and labelName=#{labelName} GROUP BY labelName
  </select>
  <insert id="new_addlable">
  insert into productLabel (userId,labelName,createDate,userName) values (#{userId},#{NewlabeName},getdate(),#{username})
  </insert>
  <delete id="new_deletelabel">
  delete from productLabel where userId=#{userId} and labelName=#{labelName}
  </delete>
  <update id="new_editproductlabel">
  	update productLabel set labelName=#{NewlabeName} where userId=#{userId} and labelName=#{labelName}
  </update>
  <update id="new_editasinlabel">
  	update asinLabel set labelName=#{NewlabeName} where userId=#{userId} and labelName=#{labelName}
  </update>
  <insert id="productAddLable">
  insert into asinLabel (userId,labelName,asin) values (#{userId},#{labelName},#{asin})
  </insert>
  <delete id="productdelLable">
  delete from asinLabel where userId=#{userId} and labelName=#{labelName} and asin=#{asin}
  </delete>
  <!-- <select id="getSkuInfo_new" resultType="Map" parameterType="java.util.Map">
  select * from skuInfo_new where userId=#{userId}
  </select> -->
  <select id="Amazon_MonitoringOverview_Product" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_Product (#{userId},#{top},#{keyword},#{brand},#{SubCategory},#{tag})}
  </select>
  <update id="updateProduct_skuInfo">
  	update skuInfo_new set 
  	ourCode=#{ourCode},
  	groupLeadSku=#{groupLeadSku},
  	asin=#{asin},
  	name=#{name},
  	productManager_id=#{productManager_id},
  	productManager=#{productManager},
  	RootCategory=#{RootCategory},
  	ownbrand=#{ownbrand},
  	SubCategory=#{SubCategory},
  	insertTime=getdate(),
  	ProductLine=#{ProductLine}
  	where 
  	userId=#{userId} 
  	and asin=#{oldData_asin}
  </update>
  
  <insert id="insertProduct_skuInfo">
  if NOT exists(SELECT userid FROM 
  	  skuInfo_new 
  	  where 
  	userId=#{userId} 
  	and asin=#{asin}
 	  )insert into skuInfo_new (userId,ourCode,groupLeadSku,asin,name,productManager_id,productManager,RootCategory,SubCategory,ownbrand,insertTime,ProductLine)
  				   values (#{userId},#{ourCode},#{groupLeadSku},#{asin},#{name},#{productManager_id},#{productManager},#{RootCategory},#{SubCategory},#{ownbrand},getdate(),#{ProductLine})
  				   else 
  				   update skuInfo_new set 
  	ourCode=#{ourCode},
  	groupLeadSku=#{groupLeadSku},
  	asin=#{asin},
  	name=#{name},
  	productManager_id=#{productManager_id},
  	productManager=#{productManager},
  	RootCategory=#{RootCategory},
  	SubCategory=#{SubCategory},
  	ownbrand=#{ownbrand},
  	insertTime=getdate(),
  	ProductLine=#{ProductLine}
  	where 
  	userId=#{userId} 
  	and asin=#{asin}
  </insert>
  <insert id="addSkuCompareInfo">
  if NOT exists(SELECT userid FROM 
  	  skucompareInfo 
  	  where 
  	userId=#{userId} 
  	and asin=#{asin}
  	and compareOurAsin=#{compareOurAsin}
 	  )insert into skucompareInfo (userId,asin,compareOurAsin) 
  				   values (#{userId},#{asin},#{compareOurAsin})
  </insert>
  <select id="Amazon_MonitoringOverview_ProductJingping" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_ProductJingping (#{userId},#{asin})}
  </select>
  <delete id="delSkuCompareInfo">
  delete from skucompareInfo where userId=#{userId} 
  	and asin=#{asin}
  	and compareOurAsin=#{compareOurAsin}
  </delete>
  <select id="Amazon_MonitoringOverview_SKU_SimilarProducts" resultType="Map" parameterType="java.util.Map">
  	 {call Amazon_MonitoringOverview_SKU_SimilarProducts (#{asin},#{userId})}
  </select>
  <select id="getOwnBrand" resultType="Map" parameterType="java.util.Map">
  	 select * from ownBrand where userId=#{userId}
  </select>
  <insert id="addOwnBrand">
  if NOT exists(SELECT userid FROM 
  	  ownBrand 
  	  where 
  	userId=#{userId} 
  	and brand=#{brand}
 	  )insert into ownBrand (userId,brand,insertTime) 
  				   values (#{userId},#{brand},getdate())
  </insert>
  <delete id="delOwnBrand">
  delete from ownBrand where userId=#{userId} and brand=#{brand}
  </delete>
    <!-- 报表-周/月销量报表数据查询 -->
    <select id="Amazon_Report_WeeklyAndMonthlyOutbound" resultType="Map" parameterType="java.util.Map">
      {call Amazon_Report_WeeklyAndMonthlyOutbound (#{userId},#{counttype},#{counttime},#{countnum},#{ourCode})}
    </select>
    <!-- 报表-查询用户可选SKU列表信息 -->
    <select id="Amazon_Report_ProductSkuList" resultType="Map" parameterType="java.util.Map">
        {call Amazon_Report_ProductSkuList (#{userId})}
    </select>

    <!-- SKU监控-查询最佳卖家类目信息 -->
    <select id="Amazon_MonitoringOverview_BestSellerCategory" resultType="Map" parameterType="java.util.Map">
      select CategoryId,CategoryName,ChildNum,ParentId,CategoryLevel,InsertTime,IsMonitoring from BestSellersCategory with(nolock)
    </select>
    <!-- SKU监控-查询最佳卖家Top数据 -->
    <select id="Amazon_MonitoringOverview_BestSellerTop" resultType="Map" parameterType="java.util.Map">
      select CrawlId,CrawlDate,CategoryId,Asin,Name,Image,Range,Price,Rating,Reviews,Seller,IsPrime,InsertTime from BestSellersTop100 with(nolock)
      where CrawlDate=#{CrawlDate}
      and CategoryId=#{CategoryId}
      and CrawlId in(select max(CrawlId) from BestSellersTop100 with(nolock) where CrawlDate=#{CrawlDate}
                  and CategoryId=#{CategoryId} )
    </select>
    <!-- SKU监控-查询最佳卖家Top详细数据(不包含自己) -->
    <select id="Amazon_MonitoringOverview_BestSellerTopDetail" resultType="Map" parameterType="java.util.Map">
      select bs.CrawlId,bs.CrawlDate,bs.PrimaryAsin,bs.ListingAsin,bs.Property,bs.Image,bs.Price,bs.InsertTime
      from BestSellersTop100Detail as bs with(nolock)
      where bs.CrawlDate=#{CrawlDate} and bs.CrawlId=#{CrawlId}
      and bs.PrimaryAsin=#{Asin} and not exists(select *
                                                from BestSellersTop100Detail with(nolock)
                                                where CrawlDate=#{CrawlDate} and CrawlId=#{CrawlId}
                                                and PrimaryAsin=#{Asin} and ListingAsin=#{Asin}
                                                and bs.CrawlDate=CrawlDate and bs.CrawlId=CrawlId
                                                and bs.PrimaryAsin=PrimaryAsin and bs.ListingAsin=ListingAsin)
    </select>
    <!-- SKU监控-更新最佳卖家目录信息(目前只支持更新是否监控标志)  -->
    <update id="Amazon_MonitoringOverview_UpdBestSellerCategory">
        update BestSellersCategory set
        IsMonitoring=#{IsMonitoring}
        where
        IsMonitoring=#{oldIsMonitoring} and CategoryId=#{oldCategoryId}
    </update>
</mapper>