<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context-4.1.xsd
			http://www.springframework.org/schema/task  
			http://www.springframework.org/schema/task/spring-task-4.1.xsd">

	<!--引入配置属性文件 -->
 	<bean id = "propertyConfigurer" class ="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" >  
       <property name = "locations" >  
           <list>  
                 <value>classpath:jdbc.properties</value>  
                 <value>classpath:redis.properties</value>  
            </list>  
        </property>  
    </bean>

    <!-- 动态sql -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
	
	
	<!-- 导入sqlserver数据库配置文件 -->
    <import resource="classpath:spring-datasource.xml"/>
    
    <!-- 导入redis配置文件 
    <import resource="classpath:spring-redis.xml"/>-->
	
	
	<!--自动扫描含有@Service将其注入为bean -->
	<context:component-scan base-package="com.analyze.service" />
	<context:component-scan base-package="com.analyze.config" />
	
	
	 <!-- 定义国际化消息说明:dispatcherServlet.xml 只会在servlet做出响应,所以加载信息应该放置在servlet中. -->   
   <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
     
     <!-- 其中basename用来指定properties文件的通用名 如实例中的messages_en.properties,messages_ja.properties通用名都是messages-->
     <property name="basename" value="messages"/>

     <property name="defaultEncoding" value="UTF-8"/>
     <property name="useCodeAsDefaultMessage" value="true" />
     
   </bean>   
   
   
	
</beans>