<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.analyze.dao.PromotionTaskDOMapper">
  <resultMap id="BaseResultMap" type="com.analyze.model.PromotionTaskDO">
    <result column="task_id" jdbcType="VARCHAR" property="taskId" />
    <result column="task_name" jdbcType="VARCHAR" property="taskName" />
    <result column="download_file_path" jdbcType="VARCHAR" property="downloadFilePath" />
    <result column="download_file_name" jdbcType="VARCHAR" property="downloadFileName" />
    <result column="task_sts" jdbcType="VARCHAR" property="taskSts" />
    <result column="insert_time" jdbcType="TIMESTAMP" property="insertTime" />
    <result column="date_from" jdbcType="VARCHAR" property="dateFrom" />
    <result column="date_to" jdbcType="VARCHAR" property="dateTo" />
  </resultMap>
  <sql id="Base_Column_List">
    task_id, task_name, download_file_path, download_file_name, task_sts, insert_time ,date_from ,date_to
  </sql>
  <insert id="insert" parameterType="com.analyze.model.PromotionTaskDO">
    insert into PromotionTask (task_id, task_name, download_file_path, 
      download_file_name, task_sts, insert_time
      )
    values (#{taskId,jdbcType=VARCHAR}, #{taskName,jdbcType=VARCHAR}, #{downloadFilePath,jdbcType=VARCHAR}, 
      #{downloadFileName,jdbcType=VARCHAR}, #{taskSts,jdbcType=VARCHAR}, #{insertTime,jdbcType=TIMESTAMP},
      #{dateFrom,jdbcType=VARCHAR}, #{dateTo,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.analyze.model.PromotionTaskDO">
    insert into PromotionTask
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        task_id,
      </if>
      <if test="taskName != null">
        task_name,
      </if>
      <if test="downloadFilePath != null">
        download_file_path,
      </if>
      <if test="downloadFileName != null">
        download_file_name,
      </if>
      <if test="taskSts != null">
        task_sts,
      </if>
      <if test="insertTime != null">
        insert_time,
      </if>
      <if test="dateFrom != null">
        date_from,
      </if>
      <if test="dateTo != null">
        date_to,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="taskId != null">
        #{taskId,jdbcType=VARCHAR},
      </if>
      <if test="taskName != null">
        #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="downloadFilePath != null">
        #{downloadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="downloadFileName != null">
        #{downloadFileName,jdbcType=VARCHAR},
      </if>
      <if test="taskSts != null">
        #{taskSts,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dateFrom != null">
        #{dateFrom,jdbcType=VARCHAR},
      </if>
      <if test="dateTo != null">
        #{dateTo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="selectPromotionList" resultType="Map" parameterType="Map">
    select * from PromotionTask with(nolock) where task_sts in('O','W','S','F') order by insert_time desc
  </select>
  <!-- 通过id查询任务信息 -->
  <select id="selectByTaskId" parameterType="map" resultMap="BaseResultMap">
    select * from PromotionTask with(nolock) where task_id=#{taskId,jdbcType=VARCHAR}
  </select>
  <!-- 由任务Id更新任务 -->
  <update id="updatePromotionByTaskId" parameterType="map">
    update PromotionTask
    <set>
      <if test="taskName != null">
        task_name = #{taskName,jdbcType=VARCHAR},
      </if>
      <if test="downloadFilePath != null">
        download_file_path = #{downloadFilePath,jdbcType=VARCHAR},
      </if>
      <if test="downloadFileName != null">
        download_file_name = #{downloadFileName,jdbcType=VARCHAR},
      </if>
      <if test="taskSts != null">
        task_sts = #{taskSts,jdbcType=VARCHAR},
      </if>
      <if test="insertTime != null">
        insert_time = #{insertTime,jdbcType=TIMESTAMP},
      </if>
      <if test="dateFrom != null">
        date_from = #{dateFrom,jdbcType=VARCHAR},
      </if>
      <if test="dateTo != null">
        date_to = #{dateTo,jdbcType=VARCHAR},
      </if>
    </set>
    where task_id = #{taskId,jdbcType=VARCHAR}
  </update>
  <select id="qryPromotionListByDate" resultType="Map" parameterType="java.util.Map">
    select vp.craw_id,vp.created_on,vp.promotion_id,vp.status,vp.name,vp.start_date,vp.end_date,
    vp.type,vp.hero_product,vp.vendor_code,vp.market_place,vp.billing_contact,vp.funding_agreement,vp.merchandising_fee,
    vpp.pname,vpp.upc,vpp.amazon_price,vpp.website_price,vpp.funding,vpp.likely_price,vpp.units_sold,
    vpp.amount_spent,vpp.revenue,vpp.asin
    from
    VcPromotionInfo as vp with(nolock)
    left join  VcPromotionProductInfo as vpp with(nolock)  on vp.craw_id=vpp.craw_id and vp.promotion_id=vpp.promotion_id
    where vp.craw_id like #{crawId,jdbcType=VARCHAR} and vpp.craw_id like #{crawId,jdbcType=VARCHAR}
    order by vp.craw_id,vp.promotion_id,vpp.asin
  </select>
  <!-- 查询状态下的任务数量 -->
  <select id="selectCountByTaskSts" parameterType="map" resultType="int">
    select count(*) from PromotionTask where task_sts=#{taskSts,jdbcType=VARCHAR}
  </select>
  <!-- 查询 -->
  <select id="selectOneByTaskSts" parameterType="map" resultMap="BaseResultMap">
    select top 1 * from PromotionTask with(nolock) where task_sts=#{taskSts,jdbcType=VARCHAR} order by task_id desc
  </select>
</mapper>